// Copyright (c) 2011. The Apache Software Foundation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

generatedDir = new File(buildDir, 'quickstart-generated')

/*
 * An example on how to scp the generated archetype-catalog.xml to the tapestry.apache.org
 * site, we need a nice way to hook it in the right place
 */
//configurations {
//    scpTask
//}
//
//dependencies {
//    scpTask 'org.apache.ant:ant-jsch:1.8.2', 'com.jcraft:jsch:0.1.42'
//}
//
//
//task publishArchetypeCatalog(dependsOn: 'archetype') {
//    description = 'Update archetype on minotaur'
//
//    // As with properties to deploy to the maven repositories (staging or central)
//    // minotaurDeployUsername and minotaurDeployPassword should be specified in
//    // ~/.gradle/gradle.properties
//    // "minotaurDeployUsername"
//    // "minotaurDeployPassword"
//    // "minotaurSshPassphrase"
//
//    scpToDir = minotaurDeployUserName + "@people.apache.org:/tmp"
//
//    println scpToDir
//
//    ant.taskdef(name: 'scp', classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
//            classpath: configurations.scpTask.asPath)
//
//    ant.scp(todir: scpToDir,
//            keyfile: '${user.home}/.ssh/id_rsa',
//            // passphrase: minotaurSshPassphrase,
//            // password: minotaurDeployPassword,
//            verbose: 'true') {
//        fileset(dir: generatedDir) {
//            include(name: '**/archetype-catalog.xml')
//        }
//    }
//}

task generateArchetype(type: Copy) {
    srcDir = file('prototypes')

    // This let gradle knwo where is UP-TO-DATE
    inputs.file srcDir
    outputs.dir generatedDir

    generatedDir.mkdirs()

    from srcDir
    into generatedDir

    // Use some of the filters provided by Ant
    filter(FixCrLfFilter)
    filter(ReplaceTokens, tokens: [
            quickstartVersion: version, tapestryReleaseVersion: version,
            servletApiReleaseVersion: servletAPIVersion,
            testngReleaseVersion: testngVersion, easymockReleaseVersion: easymockVersion
    ])

}

task archetype(type: Jar, dependsOn: 'generateArchetype') {

    description = "Creates a the JAR archive for the quickstart archetype"
    group = "Release artifact"

    destinationDir = buildDir
    baseName = "quickstart"
    version = project.version

    exclude '**/*.pom'
    exclude '**/archetype-catalog.xml'

    from generatedDir
}
